buildscript {
	ext {
		kotlinVersion 				= '1.2.30'
		jacksonVersion 				= '2.9.4' // Fix ClassNotFoundException in Kotlin : https://github.com/spring-projects/spring-boot/issues/11133
		mockitoVersion 				= '2.8.47'
		gradleTestsetsPluginVersion = '1.4.4'
		jasyptVersion 				= '1.18'
		springBootVersion 			= '1.5.10.RELEASE'
		gradleDockerVersion			= '0.13.0'
	}
	repositories {
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
		classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
		classpath "org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:${gradleTestsetsPluginVersion}"
		classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerVersion}"
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: 'com.palantir.docker'

group = 'rohmanhakim'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

testSets {
	integrationTest { dirName = 'test-integration' }
}

sourceSets {
	integrationTest.kotlin.srcDirs += 'src/test-integration/kotlin'
}

repositories {
	mavenCentral()
}

docker {
	name "rohmanhakim/randomator"
	files jar.archivePath
	buildArgs([
			'jar_file': "${jar.archiveName}",
			'active_environment': "${System.env.ACTIVE_ENVIRONMENT}",
			'port': "8080",
			'jasypt_encryptor_staging_password': "${System.env.JASYPT_ENCRYPTOR_INTEGRATION_PASSWORD}"
	])
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web') {
		exclude group: "com.fasterxml.jackson"
	}
	compile("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}")
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	compile("com.github.ulisesbocchio:jasypt-spring-boot-starter:${jasyptVersion}")

	runtime('org.postgresql:postgresql')

	testCompile('com.fasterxml.jackson.module:jackson-module-kotlin')
	testCompile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
	testCompile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	testCompile("org.mockito:mockito-core:${mockitoVersion}")
	testCompile('org.springframework.boot:spring-boot-starter-test') {
		exclude group: "org.mockito"
	}
	testCompile("org.apache.httpcomponents:httpclient")
	testCompile("com.h2database:h2")
}
